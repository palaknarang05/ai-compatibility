import {
  useTreeViewStyleContext
} from "./chunk-WMZYJLQT.js";
import {
  useSlotProps_default
} from "./chunk-WI27ZLKQ.js";
import {
  resolveComponentProps_default
} from "./chunk-ABXZA27C.js";
import {
  createSvgIcon
} from "./chunk-3SFLAIX4.js";
import {
  _extends
} from "./chunk-EQCCHGRT.js";
import {
  require_prop_types
} from "./chunk-KGQARGC2.js";
import {
  require_jsx_runtime
} from "./chunk-OBYCLIUT.js";
import {
  require_react
} from "./chunk-BQYK6RGN.js";
import {
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/@mui/x-tree-view/esm/TreeItemIcon/TreeItemIcon.js
var React2 = __toESM(require_react(), 1);
var import_prop_types = __toESM(require_prop_types(), 1);

// node_modules/@mui/x-tree-view/esm/icons/icons.js
var React = __toESM(require_react(), 1);
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var TreeViewExpandIcon = createSvgIcon((0, import_jsx_runtime.jsx)("path", {
  d: "M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"
}), "TreeViewExpandIcon");
var TreeViewCollapseIcon = createSvgIcon((0, import_jsx_runtime.jsx)("path", {
  d: "M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z"
}), "TreeViewCollapseIcon");

// node_modules/@mui/x-tree-view/esm/TreeItemIcon/TreeItemIcon.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
function TreeItemIcon(props) {
  const {
    slots: slotsFromTreeItem,
    slotProps: slotPropsFromTreeItem,
    status
  } = props;
  const {
    slots: slotsFromTreeView,
    slotProps: slotPropsFromTreeView
  } = useTreeViewStyleContext();
  const slots = {
    collapseIcon: slotsFromTreeItem?.collapseIcon ?? slotsFromTreeView.collapseIcon ?? TreeViewCollapseIcon,
    expandIcon: slotsFromTreeItem?.expandIcon ?? slotsFromTreeView.expandIcon ?? TreeViewExpandIcon,
    endIcon: slotsFromTreeItem?.endIcon ?? slotsFromTreeView.endIcon,
    icon: slotsFromTreeItem?.icon
  };
  let iconName;
  if (slots?.icon) {
    iconName = "icon";
  } else if (status.expandable) {
    if (status.expanded) {
      iconName = "collapseIcon";
    } else {
      iconName = "expandIcon";
    }
  } else {
    iconName = "endIcon";
  }
  const Icon = slots[iconName];
  const iconProps = useSlotProps_default({
    elementType: Icon,
    externalSlotProps: (tempOwnerState) => _extends({}, resolveComponentProps_default(slotPropsFromTreeView[iconName], tempOwnerState), resolveComponentProps_default(slotPropsFromTreeItem?.[iconName], tempOwnerState)),
    // TODO: Add proper ownerState
    ownerState: {}
  });
  if (!Icon) {
    return null;
  }
  return (0, import_jsx_runtime2.jsx)(Icon, _extends({}, iconProps));
}
true ? TreeItemIcon.propTypes = {
  // ----------------------------- Warning --------------------------------
  // | These PropTypes are generated from the TypeScript type definitions |
  // | To update them edit the TypeScript types and run "pnpm proptypes"  |
  // ----------------------------------------------------------------------
  /**
   * The props used for each component slot.
   * @default {}
   */
  slotProps: import_prop_types.default.object,
  /**
   * Overridable component slots.
   * @default {}
   */
  slots: import_prop_types.default.object,
  status: import_prop_types.default.shape({
    disabled: import_prop_types.default.bool.isRequired,
    editable: import_prop_types.default.bool.isRequired,
    editing: import_prop_types.default.bool.isRequired,
    error: import_prop_types.default.bool.isRequired,
    expandable: import_prop_types.default.bool.isRequired,
    expanded: import_prop_types.default.bool.isRequired,
    focused: import_prop_types.default.bool.isRequired,
    loading: import_prop_types.default.bool.isRequired,
    selected: import_prop_types.default.bool.isRequired
  }).isRequired
} : void 0;

export {
  TreeItemIcon
};
//# sourceMappingURL=chunk-EYIBXSK3.js.map
