{
  "version": 3,
  "sources": ["../../@mui/x-tree-view/esm/TreeItemIcon/TreeItemIcon.js", "../../@mui/x-tree-view/esm/icons/icons.js"],
  "sourcesContent": ["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport resolveComponentProps from '@mui/utils/resolveComponentProps';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { useTreeViewStyleContext } from \"../internals/TreeViewProvider/TreeViewStyleContext.js\";\nimport { TreeViewCollapseIcon, TreeViewExpandIcon } from \"../icons/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction TreeItemIcon(props) {\n  const {\n    slots: slotsFromTreeItem,\n    slotProps: slotPropsFromTreeItem,\n    status\n  } = props;\n  const {\n    slots: slotsFromTreeView,\n    slotProps: slotPropsFromTreeView\n  } = useTreeViewStyleContext();\n  const slots = {\n    collapseIcon: slotsFromTreeItem?.collapseIcon ?? slotsFromTreeView.collapseIcon ?? TreeViewCollapseIcon,\n    expandIcon: slotsFromTreeItem?.expandIcon ?? slotsFromTreeView.expandIcon ?? TreeViewExpandIcon,\n    endIcon: slotsFromTreeItem?.endIcon ?? slotsFromTreeView.endIcon,\n    icon: slotsFromTreeItem?.icon\n  };\n  let iconName;\n  if (slots?.icon) {\n    iconName = 'icon';\n  } else if (status.expandable) {\n    if (status.expanded) {\n      iconName = 'collapseIcon';\n    } else {\n      iconName = 'expandIcon';\n    }\n  } else {\n    iconName = 'endIcon';\n  }\n  const Icon = slots[iconName];\n  const iconProps = useSlotProps({\n    elementType: Icon,\n    externalSlotProps: tempOwnerState => _extends({}, resolveComponentProps(slotPropsFromTreeView[iconName], tempOwnerState), resolveComponentProps(slotPropsFromTreeItem?.[iconName], tempOwnerState)),\n    // TODO: Add proper ownerState\n    ownerState: {}\n  });\n  if (!Icon) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Icon, _extends({}, iconProps));\n}\nprocess.env.NODE_ENV !== \"production\" ? TreeItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object,\n  status: PropTypes.shape({\n    disabled: PropTypes.bool.isRequired,\n    editable: PropTypes.bool.isRequired,\n    editing: PropTypes.bool.isRequired,\n    error: PropTypes.bool.isRequired,\n    expandable: PropTypes.bool.isRequired,\n    expanded: PropTypes.bool.isRequired,\n    focused: PropTypes.bool.isRequired,\n    loading: PropTypes.bool.isRequired,\n    selected: PropTypes.bool.isRequired\n  }).isRequired\n} : void 0;\nexport { TreeItemIcon };", "import { createSvgIcon } from '@mui/material/utils';\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const TreeViewExpandIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'TreeViewExpandIcon');\nexport const TreeViewCollapseIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'TreeViewCollapseIcon');"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAAA,SAAuB;AACvB,wBAAsB;;;ACHtB,YAAuB;AACvB,yBAA4B;AACrB,IAAM,qBAAqB,kBAA2B,mBAAAC,KAAK,QAAQ;AAAA,EACxE,GAAG;AACL,CAAC,GAAG,oBAAoB;AACjB,IAAM,uBAAuB,kBAA2B,mBAAAA,KAAK,QAAQ;AAAA,EAC1E,GAAG;AACL,CAAC,GAAG,sBAAsB;;;ADC1B,IAAAC,sBAA4B;AAC5B,SAAS,aAAa,OAAO;AAC3B,QAAM;AAAA,IACJ,OAAO;AAAA,IACP,WAAW;AAAA,IACX;AAAA,EACF,IAAI;AACJ,QAAM;AAAA,IACJ,OAAO;AAAA,IACP,WAAW;AAAA,EACb,IAAI,wBAAwB;AAC5B,QAAM,QAAQ;AAAA,IACZ,cAAc,mBAAmB,gBAAgB,kBAAkB,gBAAgB;AAAA,IACnF,YAAY,mBAAmB,cAAc,kBAAkB,cAAc;AAAA,IAC7E,SAAS,mBAAmB,WAAW,kBAAkB;AAAA,IACzD,MAAM,mBAAmB;AAAA,EAC3B;AACA,MAAI;AACJ,MAAI,OAAO,MAAM;AACf,eAAW;AAAA,EACb,WAAW,OAAO,YAAY;AAC5B,QAAI,OAAO,UAAU;AACnB,iBAAW;AAAA,IACb,OAAO;AACL,iBAAW;AAAA,IACb;AAAA,EACF,OAAO;AACL,eAAW;AAAA,EACb;AACA,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,YAAY,qBAAa;AAAA,IAC7B,aAAa;AAAA,IACb,mBAAmB,oBAAkB,SAAS,CAAC,GAAG,8BAAsB,sBAAsB,QAAQ,GAAG,cAAc,GAAG,8BAAsB,wBAAwB,QAAQ,GAAG,cAAc,CAAC;AAAA;AAAA,IAElM,YAAY,CAAC;AAAA,EACf,CAAC;AACD,MAAI,CAAC,MAAM;AACT,WAAO;AAAA,EACT;AACA,aAAoB,oBAAAC,KAAK,MAAM,SAAS,CAAC,GAAG,SAAS,CAAC;AACxD;AACA,OAAwC,aAAa,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS/D,WAAW,kBAAAC,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA,EAKrB,OAAO,kBAAAA,QAAU;AAAA,EACjB,QAAQ,kBAAAA,QAAU,MAAM;AAAA,IACtB,UAAU,kBAAAA,QAAU,KAAK;AAAA,IACzB,UAAU,kBAAAA,QAAU,KAAK;AAAA,IACzB,SAAS,kBAAAA,QAAU,KAAK;AAAA,IACxB,OAAO,kBAAAA,QAAU,KAAK;AAAA,IACtB,YAAY,kBAAAA,QAAU,KAAK;AAAA,IAC3B,UAAU,kBAAAA,QAAU,KAAK;AAAA,IACzB,SAAS,kBAAAA,QAAU,KAAK;AAAA,IACxB,SAAS,kBAAAA,QAAU,KAAK;AAAA,IACxB,UAAU,kBAAAA,QAAU,KAAK;AAAA,EAC3B,CAAC,EAAE;AACL,IAAI;",
  "names": ["React", "_jsx", "import_jsx_runtime", "_jsx", "PropTypes"]
}
